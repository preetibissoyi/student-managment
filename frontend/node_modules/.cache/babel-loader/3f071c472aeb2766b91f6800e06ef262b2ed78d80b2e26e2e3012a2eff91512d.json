{"ast":null,"code":"var _jsxFileName = \"D:\\\\newstudent-managment\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Container, Grid, Paper, Typography, Card, CardContent, CardActions, Button } from '@mui/material';\nimport { People as PeopleIcon, Assessment as AssessmentIcon, School as SchoolIcon, Person as PersonIcon, Grade as GradeIcon, Description as DescriptionIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const adminToken = localStorage.getItem('adminToken');\n  const studentData = JSON.parse(localStorage.getItem('studentData') || '{}');\n  const isAdmin = !!adminToken;\n  const adminCards = [{\n    title: 'Manage Students',\n    description: 'Add, edit, or remove student records',\n    icon: /*#__PURE__*/_jsxDEV(PeopleIcon, {\n      sx: {\n        fontSize: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this),\n    path: '/admin/students'\n  }, {\n    title: 'Manage Results',\n    description: 'Add or update student results',\n    icon: /*#__PURE__*/_jsxDEV(AssessmentIcon, {\n      sx: {\n        fontSize: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this),\n    path: '/admin/results'\n  }, {\n    title: 'Batch Results',\n    description: 'View and manage batch-wise results',\n    icon: /*#__PURE__*/_jsxDEV(SchoolIcon, {\n      sx: {\n        fontSize: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this),\n    path: '/admin/batch-results'\n  }, {\n    title: 'Examination Cards',\n    description: 'Generate and manage examination cards',\n    icon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n      sx: {\n        fontSize: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this),\n    path: '/admin/examination-cards'\n  }];\n  const studentCards = [{\n    title: 'My Results',\n    description: 'View your academic results',\n    icon: /*#__PURE__*/_jsxDEV(GradeIcon, {\n      sx: {\n        fontSize: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this),\n    path: '/student/results'\n  }, {\n    title: 'My Profile',\n    description: 'View and update your profile',\n    icon: /*#__PURE__*/_jsxDEV(PersonIcon, {\n      sx: {\n        fontSize: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this),\n    path: '/student/profile'\n  }];\n  const cards = isAdmin ? adminCards : studentCards;\n  const userData = isAdmin ? {\n    name: 'Admin'\n  } : studentData;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: [\"Welcome, \", userData.name || (isAdmin ? 'Admin' : 'Student')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"text.secondary\",\n        children: isAdmin ? 'Manage your student management system' : 'View your academic information and results'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            '&:hover': {\n              boxShadow: 6\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mr: 2,\n                  color: 'primary.main'\n                },\n                children: card.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"h2\",\n                children: card.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: card.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"primary\",\n              onClick: () => navigate(card.path),\n              children: [\"Go to \", card.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, card.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Box","Container","Grid","Paper","Typography","Card","CardContent","CardActions","Button","People","PeopleIcon","Assessment","AssessmentIcon","School","SchoolIcon","Person","PersonIcon","Grade","GradeIcon","Description","DescriptionIcon","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","adminToken","localStorage","getItem","studentData","JSON","parse","isAdmin","adminCards","title","description","icon","sx","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","path","studentCards","cards","userData","name","maxWidth","children","mt","mb","variant","component","gutterBottom","color","container","spacing","map","card","item","xs","sm","md","height","display","flexDirection","boxShadow","flexGrow","alignItems","mr","size","onClick","_c","$RefreshReg$"],"sources":["D:/newstudent-managment/frontend/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    CardActions,\r\n    Button\r\n} from '@mui/material';\r\nimport {\r\n    People as PeopleIcon,\r\n    Assessment as AssessmentIcon,\r\n    School as SchoolIcon,\r\n    Person as PersonIcon,\r\n    Grade as GradeIcon,\r\n    Description as DescriptionIcon\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n    const adminToken = localStorage.getItem('adminToken');\r\n    const studentData = JSON.parse(localStorage.getItem('studentData') || '{}');\r\n    const isAdmin = !!adminToken;\r\n\r\n    const adminCards = [\r\n        {\r\n            title: 'Manage Students',\r\n            description: 'Add, edit, or remove student records',\r\n            icon: <PeopleIcon sx={{ fontSize: 40 }} />,\r\n            path: '/admin/students'\r\n        },\r\n        {\r\n            title: 'Manage Results',\r\n            description: 'Add or update student results',\r\n            icon: <AssessmentIcon sx={{ fontSize: 40 }} />,\r\n            path: '/admin/results'\r\n        },\r\n        {\r\n            title: 'Batch Results',\r\n            description: 'View and manage batch-wise results',\r\n            icon: <SchoolIcon sx={{ fontSize: 40 }} />,\r\n            path: '/admin/batch-results'\r\n        },\r\n        {\r\n            title: 'Examination Cards',\r\n            description: 'Generate and manage examination cards',\r\n            icon: <DescriptionIcon sx={{ fontSize: 40 }} />,\r\n            path: '/admin/examination-cards'\r\n        }\r\n    ];\r\n\r\n    const studentCards = [\r\n        {\r\n            title: 'My Results',\r\n            description: 'View your academic results',\r\n            icon: <GradeIcon sx={{ fontSize: 40 }} />,\r\n            path: '/student/results'\r\n        },\r\n        {\r\n            title: 'My Profile',\r\n            description: 'View and update your profile',\r\n            icon: <PersonIcon sx={{ fontSize: 40 }} />,\r\n            path: '/student/profile'\r\n        }\r\n    ];\r\n\r\n    const cards = isAdmin ? adminCards : studentCards;\r\n    const userData = isAdmin ? { name: 'Admin' } : studentData;\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Box sx={{ mt: 4, mb: 4 }}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                    Welcome, {userData.name || (isAdmin ? 'Admin' : 'Student')}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                    {isAdmin \r\n                        ? 'Manage your student management system'\r\n                        : 'View your academic information and results'\r\n                    }\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Grid container spacing={3}>\r\n                {cards.map((card) => (\r\n                    <Grid item xs={12} sm={6} md={4} key={card.title}>\r\n                        <Card\r\n                            sx={{\r\n                                height: '100%',\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                '&:hover': {\r\n                                    boxShadow: 6\r\n                                }\r\n                            }}\r\n                        >\r\n                            <CardContent sx={{ flexGrow: 1 }}>\r\n                                <Box\r\n                                    sx={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        mb: 2\r\n                                    }}\r\n                                >\r\n                                    <Box sx={{ mr: 2, color: 'primary.main' }}>\r\n                                        {card.icon}\r\n                                    </Box>\r\n                                    <Typography variant=\"h6\" component=\"h2\">\r\n                                        {card.title}\r\n                                    </Typography>\r\n                                </Box>\r\n                                <Typography color=\"text.secondary\">\r\n                                    {card.description}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => navigate(card.path)}\r\n                                >\r\n                                    Go to {card.title}\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}