{"ast":null,"code":"var _jsxFileName = \"D:\\\\newstudent-managment\\\\frontend\\\\src\\\\components\\\\StudentManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, Button, TextField, Grid, Box, CircularProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { getAuthToken, logout } from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentManagement = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [formData, setFormData] = useState({\n    studentName: '',\n    collegeRollNumber: '',\n    programType: '',\n    stream: '',\n    batch: '',\n    email: '',\n    password: '',\n    profilePhoto: null\n  });\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  const fetchStudents = async () => {\n    try {\n      setLoading(true);\n      const token = getAuthToken();\n      if (!token) {\n        setError('Please login as admin to access this page');\n        return;\n      }\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/students`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const studentsWithFullUrls = response.data.data.students.map(student => ({\n        ...student,\n        profilePhoto: student.profilePhoto ? `${process.env.REACT_APP_API_URL}/${student.profilePhoto}` : null\n      }));\n      setStudents(studentsWithFullUrls);\n      setError('');\n    } catch (err) {\n      var _err$response;\n      console.error('Error fetching students:', err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        logout();\n      } else {\n        var _err$response2, _err$response2$data;\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to fetch students');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFileChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      profilePhoto: e.target.files[0]\n    }));\n  };\n\n  // Function to generate examination roll number\n  const generateExamRollNumber = () => {\n    const randomNum = Math.floor(100000 + Math.random() * 900000);\n    return `EX-${randomNum}`;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      // Validate form data\n      if (!formData.studentName.trim()) {\n        setError('Student name is required');\n        setLoading(false);\n        return;\n      }\n      if (!formData.email.trim()) {\n        setError('Email is required');\n        setLoading(false);\n        return;\n      }\n      if (!formData.password) {\n        setError('Password is required');\n        setLoading(false);\n        return;\n      }\n      if (!formData.collegeRollNumber.trim()) {\n        setError('College roll number is required');\n        setLoading(false);\n        return;\n      }\n      if (!formData.programType) {\n        setError('Program type is required');\n        setLoading(false);\n        return;\n      }\n      if (!formData.stream.trim()) {\n        setError('Stream is required');\n        setLoading(false);\n        return;\n      }\n      if (!formData.batch.trim()) {\n        setError('Batch is required');\n        setLoading(false);\n        return;\n      }\n      const token = getAuthToken();\n      const formDataToSend = new FormData();\n\n      // Append all form fields\n      formDataToSend.append('studentName', formData.studentName.trim());\n      formDataToSend.append('email', formData.email.trim().toLowerCase());\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('collegeRollNumber', formData.collegeRollNumber.trim());\n      formDataToSend.append('programType', formData.programType);\n      formDataToSend.append('stream', formData.stream.trim());\n      formDataToSend.append('batch', formData.batch.trim());\n\n      // Only append profile photo if it exists\n      if (formData.profilePhoto) {\n        formDataToSend.append('profilePhoto', formData.profilePhoto);\n      }\n\n      // Log the form data being sent\n      const formDataObj = {};\n      formDataToSend.forEach((value, key) => {\n        formDataObj[key] = value;\n      });\n      console.log('Sending form data:', formDataObj);\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/students`, formDataToSend, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.status === 'success') {\n        setOpenDialog(false);\n        setFormData({\n          studentName: '',\n          collegeRollNumber: '',\n          programType: '',\n          stream: '',\n          batch: '',\n          email: '',\n          password: '',\n          profilePhoto: null\n        });\n        fetchStudents();\n      }\n    } catch (err) {\n      var _err$response3;\n      console.error('Error adding student:', err);\n      if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 401) {\n        logout();\n      } else {\n        var _err$response4, _err$response5, _err$response5$data;\n        // Log the detailed error response\n        console.error('Error response:', (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data);\n        setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to add student');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEdit = student => {\n    setSelectedStudent(student);\n    setFormData({\n      ...student,\n      profilePhoto: null\n    });\n    setOpenDialog(true);\n  };\n  const handleDelete = async studentId => {\n    if (window.confirm('Are you sure you want to delete this student?')) {\n      try {\n        const token = getAuthToken();\n        const response = await axios.delete(`${process.env.REACT_APP_API_URL}/students/${studentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.status === 'success') {\n          fetchStudents();\n        }\n      } catch (err) {\n        var _err$response6;\n        console.error('Error deleting student:', err);\n        if (((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.status) === 401) {\n          logout();\n        } else {\n          var _err$response7, _err$response7$data;\n          setError(((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || 'Failed to delete student');\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Student Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          setSelectedStudent(null);\n          setFormData({\n            studentName: '',\n            collegeRollNumber: '',\n            programType: '',\n            stream: '',\n            batch: '',\n            email: '',\n            password: '',\n            profilePhoto: null\n          });\n          setOpenDialog(true);\n        },\n        sx: {\n          mb: 3\n        },\n        children: \"Add New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Profile Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"College Roll Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Exam Roll Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Program Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Stream\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Batch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Exam Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: students.map(student => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: student.profilePhoto ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: student.profilePhoto,\n                  alt: student.studentName,\n                  style: {\n                    width: 50,\n                    height: 50,\n                    borderRadius: '50%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 49\n                }, this) : 'No photo'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: student.studentName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: student.collegeRollNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: student.examinationRollNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: student.programType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: student.stream\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: student.batch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: student.examCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  onClick: () => handleEdit(student),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"error\",\n                  onClick: () => handleDelete(student._id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 41\n              }, this)]\n            }, student._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: selectedStudent ? 'Edit Student' : 'Add New Student'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Student Name\",\n              name: \"studentName\",\n              value: formData.studentName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Email\",\n              name: \"email\",\n              type: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"College Roll Number\",\n              name: \"collegeRollNumber\",\n              value: formData.collegeRollNumber,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Program Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"programType\",\n                value: formData.programType,\n                onChange: handleChange,\n                label: \"Program Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"UG\",\n                  children: \"UG\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"PG\",\n                  children: \"PG\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Stream\",\n              name: \"stream\",\n              value: formData.stream,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Batch\",\n              name: \"batch\",\n              value: formData.batch,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              component: \"label\",\n              fullWidth: true,\n              children: [\"Upload Profile Photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                hidden: true,\n                accept: \"image/*\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 29\n            }, this), formData.profilePhoto && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mt: 1\n              },\n              children: [\"File selected: \", formData.profilePhoto.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 36\n          }, this) : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentManagement, \"pXzeU8NCICD2vWE/VU2j8Mc9DNc=\");\n_c = StudentManagement;\nexport default StudentManagement;\nvar _c;\n$RefreshReg$(_c, \"StudentManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Paper","Typography","Button","TextField","Grid","Box","CircularProgress","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Select","MenuItem","FormControl","InputLabel","Edit","EditIcon","Delete","DeleteIcon","getAuthToken","logout","jsxDEV","_jsxDEV","StudentManagement","_s","students","setStudents","loading","setLoading","error","setError","openDialog","setOpenDialog","selectedStudent","setSelectedStudent","formData","setFormData","studentName","collegeRollNumber","programType","stream","batch","email","password","profilePhoto","fetchStudents","token","response","get","process","env","REACT_APP_API_URL","headers","Authorization","studentsWithFullUrls","data","map","student","err","_err$response","console","status","_err$response2","_err$response2$data","message","handleChange","e","name","value","target","prev","handleFileChange","files","generateExamRollNumber","randomNum","Math","floor","random","handleSubmit","preventDefault","trim","formDataToSend","FormData","append","toLowerCase","formDataObj","forEach","key","log","post","_err$response3","_err$response4","_err$response5","_err$response5$data","handleEdit","handleDelete","studentId","window","confirm","delete","_err$response6","_err$response7","_err$response7$data","maxWidth","children","sx","mt","mb","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","color","onClick","display","justifyContent","src","alt","style","width","height","borderRadius","examinationRollNumber","examCode","_id","open","onClose","fullWidth","container","spacing","item","xs","label","onChange","required","type","hidden","accept","disabled","size","_c","$RefreshReg$"],"sources":["D:/newstudent-managment/frontend/src/components/StudentManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Container,\r\n    Paper,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n    Grid,\r\n    Box,\r\n    CircularProgress,\r\n    Alert,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    InputLabel\r\n} from '@mui/material';\r\nimport { Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\r\nimport { getAuthToken, logout } from '../utils/auth';\r\n\r\nconst StudentManagement = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [selectedStudent, setSelectedStudent] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        studentName: '',\r\n        collegeRollNumber: '',\r\n        programType: '',\r\n        stream: '',\r\n        batch: '',\r\n        email: '',\r\n        password: '',\r\n        profilePhoto: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchStudents();\r\n    }, []);\r\n\r\n    const fetchStudents = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const token = getAuthToken();\r\n\r\n            if (!token) {\r\n                setError('Please login as admin to access this page');\r\n                return;\r\n            }\r\n\r\n            const response = await axios.get(`${process.env.REACT_APP_API_URL}/students`, {\r\n                headers: { \r\n                    Authorization: `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            const studentsWithFullUrls = response.data.data.students.map(student => ({\r\n                ...student,\r\n                profilePhoto: student.profilePhoto \r\n                    ? `${process.env.REACT_APP_API_URL}/${student.profilePhoto}`\r\n                    : null\r\n            }));\r\n\r\n            setStudents(studentsWithFullUrls);\r\n            setError('');\r\n        } catch (err) {\r\n            console.error('Error fetching students:', err);\r\n            if (err.response?.status === 401) {\r\n                logout();\r\n            } else {\r\n                setError(err.response?.data?.message || 'Failed to fetch students');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            profilePhoto: e.target.files[0]\r\n        }));\r\n    };\r\n\r\n    // Function to generate examination roll number\r\n    const generateExamRollNumber = () => {\r\n        const randomNum = Math.floor(100000 + Math.random() * 900000);\r\n        return `EX-${randomNum}`;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            // Validate form data\r\n            if (!formData.studentName.trim()) {\r\n                setError('Student name is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            if (!formData.email.trim()) {\r\n                setError('Email is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            if (!formData.password) {\r\n                setError('Password is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            if (!formData.collegeRollNumber.trim()) {\r\n                setError('College roll number is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            if (!formData.programType) {\r\n                setError('Program type is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            if (!formData.stream.trim()) {\r\n                setError('Stream is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            if (!formData.batch.trim()) {\r\n                setError('Batch is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const token = getAuthToken();\r\n            const formDataToSend = new FormData();\r\n            \r\n            // Append all form fields\r\n            formDataToSend.append('studentName', formData.studentName.trim());\r\n            formDataToSend.append('email', formData.email.trim().toLowerCase());\r\n            formDataToSend.append('password', formData.password);\r\n            formDataToSend.append('collegeRollNumber', formData.collegeRollNumber.trim());\r\n            formDataToSend.append('programType', formData.programType);\r\n            formDataToSend.append('stream', formData.stream.trim());\r\n            formDataToSend.append('batch', formData.batch.trim());\r\n            \r\n            // Only append profile photo if it exists\r\n            if (formData.profilePhoto) {\r\n                formDataToSend.append('profilePhoto', formData.profilePhoto);\r\n            }\r\n\r\n            // Log the form data being sent\r\n            const formDataObj = {};\r\n            formDataToSend.forEach((value, key) => {\r\n                formDataObj[key] = value;\r\n            });\r\n            console.log('Sending form data:', formDataObj);\r\n\r\n            const response = await axios.post(\r\n                `${process.env.REACT_APP_API_URL}/students`,\r\n                formDataToSend,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (response.data.status === 'success') {\r\n                setOpenDialog(false);\r\n                setFormData({\r\n                    studentName: '',\r\n                    collegeRollNumber: '',\r\n                    programType: '',\r\n                    stream: '',\r\n                    batch: '',\r\n                    email: '',\r\n                    password: '',\r\n                    profilePhoto: null\r\n                });\r\n                fetchStudents();\r\n            }\r\n        } catch (err) {\r\n            console.error('Error adding student:', err);\r\n            if (err.response?.status === 401) {\r\n                logout();\r\n            } else {\r\n                // Log the detailed error response\r\n                console.error('Error response:', err.response?.data);\r\n                setError(err.response?.data?.message || 'Failed to add student');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (student) => {\r\n        setSelectedStudent(student);\r\n        setFormData({\r\n            ...student,\r\n            profilePhoto: null\r\n        });\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleDelete = async (studentId) => {\r\n        if (window.confirm('Are you sure you want to delete this student?')) {\r\n            try {\r\n                const token = getAuthToken();\r\n                const response = await axios.delete(\r\n                    `${process.env.REACT_APP_API_URL}/students/${studentId}`,\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`\r\n                        }\r\n                    }\r\n                );\r\n\r\n                if (response.data.status === 'success') {\r\n                    fetchStudents();\r\n                }\r\n            } catch (err) {\r\n                console.error('Error deleting student:', err);\r\n                if (err.response?.status === 401) {\r\n                    logout();\r\n                } else {\r\n                    setError(err.response?.data?.message || 'Failed to delete student');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Box sx={{ mt: 4, mb: 4 }}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                    Student Management\r\n                </Typography>\r\n                \r\n                {error && (\r\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        setSelectedStudent(null);\r\n                        setFormData({\r\n                            studentName: '',\r\n                            collegeRollNumber: '',\r\n                            programType: '',\r\n                            stream: '',\r\n                            batch: '',\r\n                            email: '',\r\n                            password: '',\r\n                            profilePhoto: null\r\n                        });\r\n                        setOpenDialog(true);\r\n                    }}\r\n                    sx={{ mb: 3 }}\r\n                >\r\n                    Add New Student\r\n                </Button>\r\n\r\n                {loading ? (\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <CircularProgress />\r\n                    </Box>\r\n                ) : (\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Profile Photo</TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>College Roll Number</TableCell>\r\n                                    <TableCell>Exam Roll Number</TableCell>\r\n                                    <TableCell>Program Type</TableCell>\r\n                                    <TableCell>Stream</TableCell>\r\n                                    <TableCell>Batch</TableCell>\r\n                                    <TableCell>Exam Code</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {students.map((student) => (\r\n                                    <TableRow key={student._id}>\r\n                                        <TableCell>\r\n                                            {student.profilePhoto ? (\r\n                                                <img\r\n                                                    src={student.profilePhoto}\r\n                                                    alt={student.studentName}\r\n                                                    style={{ width: 50, height: 50, borderRadius: '50%' }}\r\n                                                />\r\n                                            ) : (\r\n                                                'No photo'\r\n                                            )}\r\n                                        </TableCell>\r\n                                        <TableCell>{student.studentName}</TableCell>\r\n                                        <TableCell>{student.collegeRollNumber}</TableCell>\r\n                                        <TableCell>{student.examinationRollNumber}</TableCell>\r\n                                        <TableCell>{student.programType}</TableCell>\r\n                                        <TableCell>{student.stream}</TableCell>\r\n                                        <TableCell>{student.batch}</TableCell>\r\n                                        <TableCell>{student.examCode}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton\r\n                                                color=\"primary\"\r\n                                                onClick={() => handleEdit(student)}\r\n                                            >\r\n                                                <EditIcon />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                color=\"error\"\r\n                                                onClick={() => handleDelete(student._id)}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </Box>\r\n\r\n            <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n                <DialogTitle>\r\n                    {selectedStudent ? 'Edit Student' : 'Add New Student'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container spacing={2} sx={{ mt: 1 }}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Student Name\"\r\n                                name=\"studentName\"\r\n                                value={formData.studentName}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"College Roll Number\"\r\n                                name=\"collegeRollNumber\"\r\n                                value={formData.collegeRollNumber}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel>Program Type</InputLabel>\r\n                                <Select\r\n                                    name=\"programType\"\r\n                                    value={formData.programType}\r\n                                    onChange={handleChange}\r\n                                    label=\"Program Type\"\r\n                                >\r\n                                    <MenuItem value=\"UG\">UG</MenuItem>\r\n                                    <MenuItem value=\"PG\">PG</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Stream\"\r\n                                name=\"stream\"\r\n                                value={formData.stream}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Batch\"\r\n                                name=\"batch\"\r\n                                value={formData.batch}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                component=\"label\"\r\n                                fullWidth\r\n                            >\r\n                                Upload Profile Photo\r\n                                <input\r\n                                    type=\"file\"\r\n                                    hidden\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleFileChange}\r\n                                />\r\n                            </Button>\r\n                            {formData.profilePhoto && (\r\n                                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                                    File selected: {formData.profilePhoto.name}\r\n                                </Typography>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? <CircularProgress size={24} /> : 'Save'}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default StudentManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}