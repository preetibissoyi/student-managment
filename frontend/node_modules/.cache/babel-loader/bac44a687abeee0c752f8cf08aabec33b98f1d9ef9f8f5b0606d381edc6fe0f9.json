{"ast":null,"code":"var _jsxFileName = \"D:\\\\newstudent-managment\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const location = useLocation();\n  const adminToken = localStorage.getItem('adminToken');\n  const studentToken = localStorage.getItem('studentToken');\n  const adminData = JSON.parse(localStorage.getItem('adminData') || '{}');\n  const studentData = JSON.parse(localStorage.getItem('studentData') || '{}');\n\n  // Check if user is authenticated\n  if (!adminToken && !studentToken) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Check role-based access\n  if (allowedRoles) {\n    const isAdmin = adminData.role === 'admin';\n    const userRole = isAdmin ? 'admin' : 'student';\n    if (!allowedRoles.includes(userRole)) {\n      // Redirect to appropriate dashboard based on user role\n      const redirectPath = isAdmin ? '/admin/dashboard' : '/student/dashboard';\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: redirectPath,\n        state: {\n          from: location\n        },\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  return children;\n};\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","location","adminToken","localStorage","getItem","studentToken","adminData","JSON","parse","studentData","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","isAdmin","role","userRole","includes","redirectPath","_c","$RefreshReg$"],"sources":["D:/newstudent-managment/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles }) => {\r\n    const location = useLocation();\r\n    const adminToken = localStorage.getItem('adminToken');\r\n    const studentToken = localStorage.getItem('studentToken');\r\n    const adminData = JSON.parse(localStorage.getItem('adminData') || '{}');\r\n    const studentData = JSON.parse(localStorage.getItem('studentData') || '{}');\r\n\r\n    // Check if user is authenticated\r\n    if (!adminToken && !studentToken) {\r\n        return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n    }\r\n\r\n    // Check role-based access\r\n    if (allowedRoles) {\r\n        const isAdmin = adminData.role === 'admin';\r\n        const userRole = isAdmin ? 'admin' : 'student';\r\n        \r\n        if (!allowedRoles.includes(userRole)) {\r\n            // Redirect to appropriate dashboard based on user role\r\n            const redirectPath = isAdmin ? '/admin/dashboard' : '/student/dashboard';\r\n            return <Navigate to={redirectPath} state={{ from: location }} replace />;\r\n        }\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EACrD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACzD,MAAME,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;EACvE,MAAMK,WAAW,GAAGF,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC;;EAE3E;EACA,IAAI,CAACF,UAAU,IAAI,CAACG,YAAY,EAAE;IAC9B,oBAAOT,OAAA,CAACH,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEX;MAAS,CAAE;MAACY,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtE;;EAEA;EACA,IAAIlB,YAAY,EAAE;IACd,MAAMmB,OAAO,GAAGZ,SAAS,CAACa,IAAI,KAAK,OAAO;IAC1C,MAAMC,QAAQ,GAAGF,OAAO,GAAG,OAAO,GAAG,SAAS;IAE9C,IAAI,CAACnB,YAAY,CAACsB,QAAQ,CAACD,QAAQ,CAAC,EAAE;MAClC;MACA,MAAME,YAAY,GAAGJ,OAAO,GAAG,kBAAkB,GAAG,oBAAoB;MACxE,oBAAOtB,OAAA,CAACH,QAAQ;QAACiB,EAAE,EAAEY,YAAa;QAACX,KAAK,EAAE;UAAEC,IAAI,EAAEX;QAAS,CAAE;QAACY,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC5E;EACJ;EAEA,OAAOnB,QAAQ;AACnB,CAAC;AAACE,EAAA,CAzBIH,cAAc;EAAA,QACCH,WAAW;AAAA;AAAA6B,EAAA,GAD1B1B,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}